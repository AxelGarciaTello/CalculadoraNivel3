/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ejemplo_hoc2;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;

/**
 *
 * @author axel
 */
public class FrmPrincipal2 extends javax.swing.JFrame {

    /**
     * Creates new form FrmPrincipal2
     */
    public FrmPrincipal2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCadAnalizar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextoAAnalizar = new javax.swing.JTextArea();
        btnAnalizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaTokens = new javax.swing.JTextArea();
        BtnAnalizarSintact = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TxtAreaResultSintact = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCadAnalizar.setText("Cadena a Analizar Lexicamente");

        TextoAAnalizar.setColumns(20);
        TextoAAnalizar.setRows(5);
        jScrollPane1.setViewportView(TextoAAnalizar);

        btnAnalizar.setText("Analizar Lexicamente");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        txtAreaTokens.setColumns(20);
        txtAreaTokens.setRows(5);
        jScrollPane2.setViewportView(txtAreaTokens);

        BtnAnalizarSintact.setText("Analizar Sintacticamente");
        BtnAnalizarSintact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAnalizarSintactActionPerformed(evt);
            }
        });

        TxtAreaResultSintact.setColumns(20);
        TxtAreaResultSintact.setRows(5);
        jScrollPane3.setViewportView(TxtAreaResultSintact);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(lblCadAnalizar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAnalizar))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BtnAnalizarSintact)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadAnalizar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAnalizar)
                    .addComponent(BtnAnalizarSintact))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed
        Symbol simb;
        String Lexema = new String();
        String CadAux = new String();
        File ArchEntrada = new File("ArchEntrada.txt");
        PrintWriter escribir;
        txtAreaTokens.setText("");
        TxtAreaResultSintact.setText("");
        try{
            escribir = new PrintWriter(ArchEntrada);
            escribir.print(TextoAAnalizar.getText());
            escribir.close();
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        }
        try{
            Reader lector;
            lector = new BufferedReader(new FileReader("ArchEntrada.txt"));
            AnalizadorLexico AnalizLexico = new AnalizadorLexico(lector);
            do{
                simb = AnalizLexico.next_token();
                CadAux = Integer.toString(simb.sym);
                Lexema = AnalizLexico.yytext();
                if(simb.sym == AnalizadorSintacticoSym.EOF)
                    CadAux = "Token: "+CadAux+"\tIdentTOKEN: FIN\n";
                else
                    switch(simb.sym){
                        case AnalizadorSintacticoSym.Enter:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: Enter\t Lexema: "+Lexema;
                            break;
                        case AnalizadorSintacticoSym.NUM:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: NUM\t Lexema: "+Lexema+"\n";
                            break;
                        case AnalizadorSintacticoSym.OpSuma:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: OpSuma\t Lexema: "+Lexema+"\n";
                            break;
                        case AnalizadorSintacticoSym.OpResta:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: OpResta\t Lexema: "+Lexema+"\n";
                            break;
                        case AnalizadorSintacticoSym.OpProd:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: OpProd\t Lexema: "+Lexema+"\n";
                            break;
                        case AnalizadorSintacticoSym.OpDiv:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: OpDiv\t Lexema: "+Lexema+"\n";
                            break;
                        case AnalizadorSintacticoSym.ParIzq:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: ParIzq\t Lexema: "+Lexema+"\n";
                            break;
                        case AnalizadorSintacticoSym.ParDer:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: ParDer\t Lexema: "+Lexema+"\n";
                            break;
                        case AnalizadorSintacticoSym.error:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: ERROR\t Lexema: "+Lexema+"\n";
                            break;
                        case AnalizadorSintacticoSym.VAR:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: VAR\t Lexema: "+Lexema+" indice="+Integer.toString((Integer) simb.value)+"\n";
                            break;
                        default:
                            CadAux = "Token: "+CadAux+"\tIdentTOKEN: OTRO\t Lexema: "+AnalizLexico.yytext()+"\n";
                            break;
                    }
                txtAreaTokens.append(CadAux);
            }while(simb.sym != AnalizadorSintacticoSym.EOF);
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnAnalizarActionPerformed

    private void BtnAnalizarSintactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAnalizarSintactActionPerformed
        try{
            AnalizadorSintactico Sintac = new AnalizadorSintactico(
                    new AnalizadorLexico(new FileReader("ArchEntrada.txt"))
            );
            Sintac.frmInterfaz = this;
            Object result = Sintac.parse().value;
            TxtAreaResultSintact.append("\n FIN DEL ANÁLISIS SINTÁCTICO");
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_BtnAnalizarSintactActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPrincipal2().setVisible(true);
            }
        });
    }
    
    public void PonerTextSintac(String texto){
        TxtAreaResultSintact.append(texto);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAnalizarSintact;
    private javax.swing.JTextArea TextoAAnalizar;
    private javax.swing.JTextArea TxtAreaResultSintact;
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCadAnalizar;
    private javax.swing.JTextArea txtAreaTokens;
    // End of variables declaration//GEN-END:variables
}
